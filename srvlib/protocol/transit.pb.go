// Code generated by protoc-gen-go.
// source: protocol/transit.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type SSPacketTransit struct {
	PacketId         *SrvlibPacketID `protobuf:"varint,1,req,enum=protocol.SrvlibPacketID,def=-2003" json:"PacketId,omitempty"`
	SArea            *int32          `protobuf:"varint,2,req" json:"SArea,omitempty"`
	SType            *int32          `protobuf:"varint,3,req" json:"SType,omitempty"`
	SId              *int32          `protobuf:"varint,4,req" json:"SId,omitempty"`
	Data             []byte          `protobuf:"bytes,5,req" json:"Data,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SSPacketTransit) Reset()         { *m = SSPacketTransit{} }
func (m *SSPacketTransit) String() string { return proto.CompactTextString(m) }
func (*SSPacketTransit) ProtoMessage()    {}

const Default_SSPacketTransit_PacketId SrvlibPacketID = SrvlibPacketID_PACKET_SS_TRANSIT

func (m *SSPacketTransit) GetPacketId() SrvlibPacketID {
	if m != nil && m.PacketId != nil {
		return *m.PacketId
	}
	return Default_SSPacketTransit_PacketId
}

func (m *SSPacketTransit) GetSArea() int32 {
	if m != nil && m.SArea != nil {
		return *m.SArea
	}
	return 0
}

func (m *SSPacketTransit) GetSType() int32 {
	if m != nil && m.SType != nil {
		return *m.SType
	}
	return 0
}

func (m *SSPacketTransit) GetSId() int32 {
	if m != nil && m.SId != nil {
		return *m.SId
	}
	return 0
}

func (m *SSPacketTransit) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
}
